
    ALPACA

    Minimum funding for a live account to use real time data is $1.00.

    AlpacaApi is returning current stock price data?
    There is a rate limit for the API requests.
    When it is exceeded, the API server returns error response with HTTP status code 429.
    The rate limit is 200 requests per every minute per API key.

    General Rules:
        Time Format and Time Zone:
            All date time type inputs and outputs are serialized according to ISO8601 (more specifically RFC3339).
            The communication does not assume a particular time zone,
            and this date time serialization denominates the time offset of each value.
        Numbers:
            Decimal numbers are returned as strings to preserve full precision across platforms.
            When making a request, it is recommended that you also convert your numbers to strings to avoid truncation
            and precision errors.
        IDs:
            Object ID in Alpaca system uses UUID v4. When making requests, the format with dashes is accepted.
            904837e3-3b76-47ec-b432-046db621571b

    Assets and Symbology:
        All of four symbol forms are case-sensitve.
        An asset in this API is a tradable or non-tradable financial instrument.
        Alpaca maintains our own asset database.
        Alpaca assigns an internal ID for each asset which you can use to identify assets to specify in API calls.
        Assets are also identified by a combination of symbol, screener, and asset class.
        The symbol of an asset may change over the time,
        but the symbol for an asset is always the one at the time API call is made.
        When the API accepts a parameter named symbol,
        you can use one of the following four different forms unless noted otherwise:
            - "{symbol}"
            - "{symbol}:{screener}"
            - "{symbol}:{screener}:{asset_class}"
            - "{asset_id}"
        Typically the first form is enough,
        but in the case multiple assets are found with a symbol
        (the same symbol may be used in different exchanges or asset classes), the most commonly-used asset is assumed.
        To avoid the ambiguity, you can use the second or third form with suffixes joined by colons (:) alternatively,
        asset_id is guaranteed as unique, in the form of UUID v4.
        When the API accepts symbols to specify more than one symbol in one API call,
        the general rule is to use commas (,) to separate them.

    There are some examples of "https://data.alpaca.markets/v1" on the github page.
    https://github.com/alpacahq/alpaca-trade-api-python/blob/master/README.md
    REST.get_barset(symbols, timeframe, limit, start=None, end=None, after=None, until=None)
    Calls GET /bars/{timeframe} for the given symbols,
    and returns a Barset with limit Bar objects for each of the the requested symbols.
    timeframe can be one of minute, 1Min, 5Min, 15Min, day or 1D. minute is an alias of 1Min.
    Similarly, day is an alias of 1D. start, end, after, and until need to be string format,
    which you can obtain with pd.Timestamp().isoformat().
    After cannot be used with start and until cannot be used with end.
